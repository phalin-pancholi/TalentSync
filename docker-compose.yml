services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: talentsync-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: talentsync_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - talentsync-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: talentsync-backend
    restart: unless-stopped
    environment:
      - MONGO_URL=mongodb://admin:password123@mongodb:27017/talentsync_db?authSource=admin
      - DB_NAME=talentsync_db
      - CORS_ORIGINS=http://localhost:3000,http://frontend:3000
      - DEBUG=True
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    ports:
      - "8001:8001"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - talentsync-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./backend/src:/app/src
    command: ["uvicorn", "src.api.main:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: talentsync-frontend
    restart: unless-stopped
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8001
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - talentsync-network
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Exclude node_modules from volume mount
    command: ["yarn", "start"]

  # Zoho Sync Service
  zoho-sync-service:
    build:
      context: ./zoho_sync_service
      dockerfile: Dockerfile
    container_name: talentsync-zoho-sync
    restart: always
    environment:
      - ZOHO_ACCESS_TOKEN=${ZOHO_ACCESS_TOKEN}
      - SYNC_INTERVAL=5
      - MONGO_URL=mongodb://admin:password123@mongodb:27017/talentsync_db?authSource=admin
      - DB_NAME=talentsync_db
      - BACKEND_URL=http://backend:8001
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    ports:
      - "8002:8002"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - talentsync-network
    volumes:
      - ./zoho_sync_service:/app
    command: ["python", "-m", "uvicorn", "api:app", "--host", "0.0.0.0", "--port", "8002", "--reload"]

  # Backend Tests
  backend-tests:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    container_name: talentsync-backend-tests
    environment:
      - MONGO_URL=mongodb://admin:password123@mongodb:27017/talentsync_test_db?authSource=admin
      - DB_NAME=talentsync_test_db
      - TESTING=true
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - talentsync-network
    volumes:
      - ./backend/tests:/app/tests
      - ./backend/src:/app/src
    profiles:
      - test

volumes:
  mongodb_data:
    driver: local

networks:
  talentsync-network:
    driver: bridge